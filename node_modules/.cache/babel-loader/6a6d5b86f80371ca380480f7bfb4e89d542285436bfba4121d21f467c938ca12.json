{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskLists.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TaskLists.css';\nimport AddTask from './AddTask';\nimport NavigationBar from './NavigationBar';\nimport TaskElement from './TaskElement';\nimport TaskStack from './TaskStack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskLists(_ref) {\n  _s();\n  let {\n    token,\n    user\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState('Task');\n  const popup = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalAndTaskWrapperItem popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalElementsContainer\",\n      children: /*#__PURE__*/_jsxDEV(TaskElement, {\n        bToken: token,\n        user: user,\n        setIsModalOpen: setIsModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 17\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasksListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n      token: token,\n      user: user,\n      setIsModalOpen: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalAndTaskWrapperContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalAndTaskWrapperItem\",\n        children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskStack, {\n          token: token,\n          user: user,\n          modalStatus: isModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), isModalOpen ? popup : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskLists, \"4WnNud0YyznYFDm+GdcA4Ws5+RU=\");\n_c = TaskLists;\nexport default TaskLists;\nvar _c;\n$RefreshReg$(_c, \"TaskLists\");","map":{"version":3,"names":["React","useState","AddTask","NavigationBar","TaskElement","TaskStack","TaskLists","token","user","isModalOpen","setIsModalOpen","modalType","setModalType","popup"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskLists.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/TaskLists.css'\nimport AddTask from './AddTask'\nimport NavigationBar from './NavigationBar'\nimport TaskElement from './TaskElement'\nimport TaskStack from './TaskStack'\n\nfunction TaskLists({token, user}) {\n\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [modalType, setModalType] = useState('Task')\n\n  const popup = <div className='modalAndTaskWrapperItem popup'>\n  <div className='modalElementsContainer'>\n    <TaskElement bToken={token} user={user} setIsModalOpen={setIsModalOpen} />\n  </div>\n</div>\n\n  return (\n    <div className='tasksListContainer'>\n      <AddTask token={token} user={user} setIsModalOpen={setIsModalOpen}/>\n      <div className='modalAndTaskWrapperContainer'>\n        <div className='modalAndTaskWrapperItem'>\n          <NavigationBar user={user}/>\n          <TaskStack token={token} user={user} modalStatus={isModalOpen}/>\n        </div>\n        {isModalOpen? popup: null}\n      </div>\n    </div>\n  )\n}\n\nexport default TaskLists"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAA;AAEnC,SAASC,SAAS,OAAgB;EAAA;EAAA,IAAf;IAACC,KAAK;IAAEC;EAAI,CAAC;EAE9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAElD,MAAMY,KAAK,gBAAG;IAAK,SAAS,EAAC,+BAA+B;IAAA,uBAC5D;MAAK,SAAS,EAAC,wBAAwB;MAAA,uBACrC,QAAC,WAAW;QAAC,MAAM,EAAEN,KAAM;QAAC,IAAI,EAAEC,IAAK;QAAC,cAAc,EAAEE;MAAe;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACtE;IAAA;IAAA;IAAA;EAAA,QACF;EAEJ,oBACE;IAAK,SAAS,EAAC,oBAAoB;IAAA,wBACjC,QAAC,OAAO;MAAC,KAAK,EAAEH,KAAM;MAAC,IAAI,EAAEC,IAAK;MAAC,cAAc,EAAEE;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,eACpE;MAAK,SAAS,EAAC,8BAA8B;MAAA,wBAC3C;QAAK,SAAS,EAAC,yBAAyB;QAAA,wBACtC,QAAC,aAAa;UAAC,IAAI,EAAEF;QAAK;UAAA;UAAA;UAAA;QAAA,QAAE,eAC5B,QAAC,SAAS;UAAC,KAAK,EAAED,KAAM;UAAC,IAAI,EAAEC,IAAK;UAAC,WAAW,EAAEC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D,EACLA,WAAW,GAAEI,KAAK,GAAE,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAvBQP,SAAS;AAAA,KAATA,SAAS;AAyBlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}