{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/BarChartYearly.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nfunction BarChartYearly(_ref) {\n  _s();\n  let {\n    user,\n    task\n  } = _ref;\n  const [userElement, setUserElement] = useState(user);\n  const [taskElement, setTaskElement] = useState(task);\n  const [initialFetch, setInitialFetch] = useState(false);\n  const [graphData, setGraphData] = useState({});\n  const fetchDailyLogs = async () => {\n    setInitialFetch(true);\n    const res = await axios.get('http://localhost:4000/api/getYearlyLogs', {\n      params: {\n        userId: userElement.uid,\n        taskId: taskElement.taskId\n      },\n      headers: {\n        Authorization: `Bearer ${user.accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const labels = [];\n    const timeValues = [];\n    console.log(res.data);\n    res.data.map(element => {\n      labels.push(element.year);\n      timeValues.push(element.time / 60 / 60);\n    });\n    const colors = ['#3fb5a3', '#3f51b5'];\n    const dataForGraph = {\n      labels: labels,\n      datasets: [{\n        fill: true,\n        label: task.taskTitle,\n        backgroundColor: colors,\n        borderColor: colors,\n        data: timeValues\n      }]\n    };\n    setGraphData(dataForGraph);\n  };\n  useEffect(() => {\n    if (initialFetch === false) {\n      fetchDailyLogs();\n    }\n  }, [graphData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BarGraphContainer\",\n      children: graphData.labels !== undefined && graphData.labels.length !== 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n        options: {\n          maintainAspectRatio: false\n        },\n        className: \"TaskAnalyticsDailyBarGraphElement\",\n        data: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 85\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BarGraphContainer\",\n      children: graphData.labels !== undefined ? /*#__PURE__*/_jsxDEV(Line, {\n        options: {\n          maintainAspectRatio: false\n        },\n        className: \"TaskAnalyticsDailyBarGraphElement\",\n        data: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 52\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BarGraphContainer\",\n      children: graphData.labels !== undefined ? /*#__PURE__*/_jsxDEV(Doughnut, {\n        options: {\n          maintainAspectRatio: false\n        },\n        className: \"TaskAnalyticsDailyBarGraphElement\",\n        data: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 52\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(BarChartYearly, \"s2LUQD1lbrB3Ks6EfjyHH7zgphE=\");\n_c = BarChartYearly;\nexport default BarChartYearly;\nvar _c;\n$RefreshReg$(_c, \"BarChartYearly\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Line","Doughnut","Chart","registerables","axios","register","BarChartYearly","user","task","userElement","setUserElement","taskElement","setTaskElement","initialFetch","setInitialFetch","graphData","setGraphData","fetchDailyLogs","res","get","params","userId","uid","taskId","headers","Authorization","accessToken","labels","timeValues","console","log","data","map","element","push","year","time","colors","dataForGraph","datasets","fill","label","taskTitle","backgroundColor","borderColor","undefined","length","maintainAspectRatio"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/BarChartYearly.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Bar, Line, Doughnut} from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios'\n\nChart.register(...registerables);\n\nfunction BarChartYearly({user, task}) {\n    const [userElement, setUserElement] = useState(user)\n    const [taskElement, setTaskElement] = useState(task)\n    const [initialFetch, setInitialFetch] = useState(false)\n    const [graphData, setGraphData] = useState({})\n\n    const fetchDailyLogs = async () =>{\n        setInitialFetch(true)\n        const res = await axios.get('http://localhost:4000/api/getYearlyLogs', {\n            params: { userId: userElement.uid, taskId: taskElement.taskId },\n            headers: {\n                Authorization: `Bearer ${user.accessToken}`,\n                'Content-Type': 'application/json',\n            },\n        })\n        const labels = []\n        const timeValues = []\n        console.log(res.data)\n        res.data.map((element)=>{\n            labels.push(element.year)\n            timeValues.push(((element.time / 60) / 60))\n        })\n        \n        const colors=['#3fb5a3', '#3f51b5']\n        const dataForGraph = {\n            labels: labels,\n            datasets: [\n            {\n                fill: true,\n                label: task.taskTitle,\n                backgroundColor: colors,\n                borderColor: colors,\n                data: timeValues,\n            },\n            ],\n        }\n\n        setGraphData(dataForGraph)\n\n    }\n    \n    useEffect(()=>{\n        if(initialFetch === false){\n            fetchDailyLogs()\n        }\n    },[graphData])\n\n    return (\n        <>\n            <div className='BarGraphContainer'>\n                {(graphData.labels !== undefined && graphData.labels.length !== 0)? <Bar options={{ maintainAspectRatio: false }} className=\"TaskAnalyticsDailyBarGraphElement\" data={graphData} /> : null}\n            </div>\n            <div className='BarGraphContainer'>\n                {(graphData.labels !== undefined)? <Line options={{ maintainAspectRatio: false }} className=\"TaskAnalyticsDailyBarGraphElement\" data={graphData} /> : null}\n            </div>\n            <div className='BarGraphContainer'>\n                {(graphData.labels !== undefined)? <Doughnut options={{ maintainAspectRatio: false }} className=\"TaskAnalyticsDailyBarGraphElement\" data={graphData} /> : null}\n            </div>\n        </>\n    )\n}\n\nexport default BarChartYearly"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}