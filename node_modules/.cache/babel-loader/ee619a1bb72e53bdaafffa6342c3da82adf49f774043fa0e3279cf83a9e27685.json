{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TaskCard.css';\nimport TaskTimer from './TaskTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskCard(_ref) {\n  _s();\n  let {\n    task,\n    user\n  } = _ref;\n  const [revisionDate, setRevisionDate] = useState(task.taskRevisionDate);\n  const [isBeingEdited, setIsBeingEdited] = useState(false);\n  const handleDateChangeEvent = e => {\n    console.log(e.target.value);\n    setRevisionDate(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskCardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"TaskCardCategoryElement\",\n      children: task.taskCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"TaskCardTitleElement\",\n      children: task.taskTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskCardKeywordsContainer\",\n      children: task.taskKeywords.split(',').map(keyword => {\n        if (keyword) {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"TaskCardKeywordElement\",\n            children: keyword\n          }, keyword, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"TaskCardRevisionDateElement\",\n      children: \"Next Revision Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskCardDateElementContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"TaskCardDateElement\",\n        type: \"date\",\n        value: revisionDate,\n        onChange: handleDateChangeEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskTimer, {\n      task: task,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskCard, \"JJFFH2eXpbrg7xpY/Wjqgh/oul4=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","TaskTimer","TaskCard","task","user","revisionDate","setRevisionDate","taskRevisionDate","isBeingEdited","setIsBeingEdited","handleDateChangeEvent","e","console","log","target","value","taskCategory","taskTitle","taskKeywords","split","map","keyword"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskCard.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/TaskCard.css'\nimport TaskTimer from './TaskTimer'\n\nfunction TaskCard({task, user}) {\n\n  const [revisionDate, setRevisionDate] = useState(task.taskRevisionDate)\n  const [isBeingEdited, setIsBeingEdited] = useState(false)\n\n  const handleDateChangeEvent = (e) => {\n    console.log(e.target.value)\n    setRevisionDate(e.target.value)\n  }\n\n  return (\n    <div className='TaskCardContainer'>\n      <p className='TaskCardCategoryElement'>{task.taskCategory}</p>\n      <p className='TaskCardTitleElement'>{task.taskTitle}</p>\n      <div className='TaskCardKeywordsContainer'>\n        {task.taskKeywords.split(',').map((keyword)=>{\n          if(keyword){\n            return <p key={keyword} className='TaskCardKeywordElement'>{keyword}</p>\n          }\n        })}\n      </div>\n      <p className='TaskCardRevisionDateElement'>Next Revision Date</p>\n      <div className='TaskCardDateElementContainer'>\n        <input className='TaskCardDateElement' type='date' value={revisionDate} onChange={handleDateChangeEvent}/>\n      </div>\n      <TaskTimer task={task} user={user}/>\n    </div>\n  )\n}\n\nexport default TaskCard"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAC/B,OAAOC,SAAS,MAAM,aAAa;AAAA;AAEnC,SAASC,QAAQ,OAAe;EAAA;EAAA,IAAd;IAACC,IAAI;IAAEC;EAAI,CAAC;EAE5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAACG,IAAI,CAACI,gBAAgB,CAAC;EACvE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMU,qBAAqB,GAAIC,CAAC,IAAK;IACnCC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3BT,eAAe,CAACK,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAChC;MAAG,SAAS,EAAC,yBAAyB;MAAA,UAAEZ,IAAI,CAACa;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9D;MAAG,SAAS,EAAC,sBAAsB;MAAA,UAAEb,IAAI,CAACc;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eACxD;MAAK,SAAS,EAAC,2BAA2B;MAAA,UACvCd,IAAI,CAACe,YAAY,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,OAAO,IAAG;QAC3C,IAAGA,OAAO,EAAC;UACT,oBAAO;YAAiB,SAAS,EAAC,wBAAwB;YAAA,UAAEA;UAAO,GAApDA,OAAO;YAAA;YAAA;YAAA;UAAA,QAAkD;QAC1E;MACF,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAG,SAAS,EAAC,6BAA6B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACjE;MAAK,SAAS,EAAC,8BAA8B;MAAA,uBAC3C;QAAO,SAAS,EAAC,qBAAqB;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEhB,YAAa;QAAC,QAAQ,EAAEK;MAAsB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACtG,eACN,QAAC,SAAS;MAAC,IAAI,EAAEP,IAAK;MAAC,IAAI,EAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV;AAAC,GA5BQF,QAAQ;AAAA,KAARA,QAAQ;AA8BjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}