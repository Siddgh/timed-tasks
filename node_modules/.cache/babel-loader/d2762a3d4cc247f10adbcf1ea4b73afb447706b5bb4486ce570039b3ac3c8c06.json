{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TaskCard.css';\nimport TaskTimer from './TaskTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskCard(_ref) {\n  _s();\n  let {\n    task,\n    user\n  } = _ref;\n  const [revisionDate, setRevisionDate] = useState(task.taskRevisionDate);\n  const [isBeingEdited, setIsBeingEdited] = useState(false);\n  const [taskElement, setTaskElement] = useState(task);\n  const handleDateChangeEvent = e => {\n    console.log(e.target.value);\n    setRevisionDate(e.target.value);\n  };\n  const displayElements = () => {\n    if (isBeingEdited === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskCardContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskCardTimerContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"material-icons TaskCardEditButton\",\n            onClick: console.log('Hello'),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TaskCardCategoryElement\",\n          children: task.taskCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TaskCardTitleElement\",\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskCardKeywordsContainer\",\n          children: task.taskKeywords.split(',').map(keyword => {\n            if (keyword) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"TaskCardKeywordElement\",\n                children: keyword\n              }, keyword, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 24\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TaskCardRevisionDateElement\",\n          children: \"Next Revision Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskCardDateElementContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"TaskCardDateElement\",\n            type: \"date\",\n            value: revisionDate,\n            onChange: handleDateChangeEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskTimer, {\n          task: task,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskCardContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"TaskCardEditInput TaskCardCategoryEditInputElement\",\n          placeholder: \"Category\",\n          value: taskElement.taskCategory,\n          onChange: e => setTaskElement({\n            ...taskElement,\n            taskCategory: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"TaskCardEditInput TaskCardTitleEditInputElement\",\n          placeholder: \"Title\",\n          value: taskElement.taskTitle,\n          onChange: e => setTaskElement({\n            ...taskElement,\n            taskTitle: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"TaskCardEditInput TaskCardKeywordsEditInputElement\",\n          placeholder: \"Comma (,) Seperated Keywords\",\n          value: taskElement.taskKeywords,\n          onChange: e => setTaskElement({\n            ...taskElement,\n            taskKeywords: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TaskCardRevisionDateElement\",\n          children: \"Next Revision Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskCardDateElementContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"TaskCardDateElement\",\n            type: \"date\",\n            value: revisionDate,\n            onChange: handleDateChangeEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskCardTimerContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"material-icons TaskCardEditSubmitButton\",\n            onClick: console.log('Hello'),\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return displayElements();\n}\n_s(TaskCard, \"p83Eu5enJsvv7McK6PMhtvOVAFA=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","TaskTimer","TaskCard","task","user","revisionDate","setRevisionDate","taskRevisionDate","isBeingEdited","setIsBeingEdited","taskElement","setTaskElement","handleDateChangeEvent","e","console","log","target","value","displayElements","taskCategory","taskTitle","taskKeywords","split","map","keyword"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskCard.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/TaskCard.css'\nimport TaskTimer from './TaskTimer'\n\nfunction TaskCard({task, user}) {\n\n  const [revisionDate, setRevisionDate] = useState(task.taskRevisionDate)\n  const [isBeingEdited, setIsBeingEdited] = useState(false)\n\n  const [taskElement, setTaskElement] = useState(task)\n\n\n  const handleDateChangeEvent = (e) => {\n    console.log(e.target.value)\n    setRevisionDate(e.target.value)\n  }\n\n  const displayElements = () =>{\n    if(isBeingEdited === false){\n      return(\n        <div className='TaskCardContainer'>\n          <div className='TaskCardTimerContainer'>\n            <button className='material-icons TaskCardEditButton' onClick={console.log('Hello')}>edit</button>\n          </div>\n          <p className='TaskCardCategoryElement'>{task.taskCategory}</p>\n          <p className='TaskCardTitleElement'>{task.taskTitle}</p>\n          <div className='TaskCardKeywordsContainer'>\n            {task.taskKeywords.split(',').map((keyword)=>{\n              if(keyword){\n                return <p key={keyword} className='TaskCardKeywordElement'>{keyword}</p>\n              }\n            })}\n          </div>\n          <p className='TaskCardRevisionDateElement'>Next Revision Date</p>\n          <div className='TaskCardDateElementContainer'>\n              <input className='TaskCardDateElement' type='date' value={revisionDate} onChange={handleDateChangeEvent}/>\n          </div>\n          <TaskTimer task={task} user={user}/>\n        </div>\n      )\n    }else{\n      return(\n        <div className='TaskCardContainer'>\n        \n        <input \n          type='text' \n          className='TaskCardEditInput TaskCardCategoryEditInputElement' \n          placeholder='Category' \n          value={taskElement.taskCategory} \n          onChange={e => \n            setTaskElement({...taskElement, taskCategory : e.target.value})\n          }/>\n          \n        <input \n          type='text' \n          className='TaskCardEditInput TaskCardTitleEditInputElement' \n          placeholder='Title' \n          value={taskElement.taskTitle} \n          onChange={e => \n            setTaskElement({...taskElement, taskTitle : e.target.value})\n          }/>\n\n          <input \n          type='text' \n          className='TaskCardEditInput TaskCardKeywordsEditInputElement' \n          placeholder='Comma (,) Seperated Keywords' \n          value={taskElement.taskKeywords} \n          onChange={e => \n            setTaskElement({...taskElement, taskKeywords : e.target.value})\n          }/>\n\n          <p className='TaskCardRevisionDateElement'>Next Revision Date</p>\n          <div className='TaskCardDateElementContainer'>\n              <input className='TaskCardDateElement' type='date' value={revisionDate} onChange={handleDateChangeEvent}/>\n          </div>\n          <div className='TaskCardTimerContainer'>\n            <button className='material-icons TaskCardEditSubmitButton' onClick={console.log('Hello')}>done</button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n\n  return (\n    displayElements()\n  )\n}\n\nexport default TaskCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}