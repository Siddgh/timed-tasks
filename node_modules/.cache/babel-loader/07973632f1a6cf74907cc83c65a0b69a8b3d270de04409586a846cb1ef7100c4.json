{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/App.js\",\n  _s = $RefreshSig$();\nimport { useLayoutEffect, useState } from \"react\";\nimport { Route, Routes } from 'react-router-dom';\nimport GoogleAuthSignIn from \"./components/GoogleAuthSignIn\";\nimport { getAuth } from \"firebase/auth\";\nimport Home from \"./components/Home\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport TaskAnalytics from \"./components/TaskAnalytics\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuth, setAuthStatus] = useState(false);\n  const updateAuthStatus = authValue => {\n    setAuthStatus(authValue);\n  };\n  useLayoutEffect(() => {\n    getAuth().onAuthStateChanged(userCred => {\n      if (userCred) {\n        updateAuthStatus(true);\n        userCred.getIdToken().then(token => {});\n      }\n    });\n  }, [isAuth]);\n  const screenToShow = () => {\n    if (isAuth) {\n      return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(GoogleAuthSignIn, {\n        authCheck: {\n          'authStatus': isAuth,\n          'authStatusChanger': updateAuthStatus\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: screenToShow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"tasks/:taskId\",\n        element: /*#__PURE__*/_jsxDEV(TaskAnalytics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Uos+8+ISLT0g0qFJN2eWCEz/gDU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useLayoutEffect","useState","Route","Routes","GoogleAuthSignIn","getAuth","Home","NavigationBar","TaskAnalytics","PageNotFound","App","isAuth","setAuthStatus","updateAuthStatus","authValue","onAuthStateChanged","userCred","getIdToken","then","token","screenToShow"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/App.js"],"sourcesContent":["import { useLayoutEffect, useState } from \"react\";\nimport {Route, Routes} from 'react-router-dom'\nimport GoogleAuthSignIn from \"./components/GoogleAuthSignIn\";\nimport { getAuth } from \"firebase/auth\";\nimport Home from \"./components/Home\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport TaskAnalytics from \"./components/TaskAnalytics\";\nimport PageNotFound from \"./components/PageNotFound\";\n\nfunction App() {\n  const [isAuth, setAuthStatus] = useState(false)\n\n  const updateAuthStatus = (authValue) =>{\n    setAuthStatus(authValue)\n  }\n\n  useLayoutEffect(()=>{\n    getAuth().onAuthStateChanged((userCred) => {\n      if(userCred){\n        updateAuthStatus(true)\n        userCred.getIdToken().then((token) => {\n          \n        })\n      }\n    })\n  }, [isAuth])\n\n\n  const screenToShow = () => {\n    if(isAuth){\n      return <Home />\n    }else{\n      return <GoogleAuthSignIn authCheck={{'authStatus': isAuth, 'authStatusChanger': updateAuthStatus}} />\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path='/' element={screenToShow()} />\n        <Route path='tasks/:taskId' element={<TaskAnalytics/>} />\n        <Route path='*' element={<PageNotFound/>} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,YAAY,MAAM,2BAA2B;AAAC;AAErD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMY,gBAAgB,GAAIC,SAAS,IAAI;IACrCF,aAAa,CAACE,SAAS,CAAC;EAC1B,CAAC;EAEDd,eAAe,CAAC,MAAI;IAClBK,OAAO,EAAE,CAACU,kBAAkB,CAAEC,QAAQ,IAAK;MACzC,IAAGA,QAAQ,EAAC;QACVH,gBAAgB,CAAC,IAAI,CAAC;QACtBG,QAAQ,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,KAAK,IAAK,CAEtC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAGZ,MAAMS,YAAY,GAAG,MAAM;IACzB,IAAGT,MAAM,EAAC;MACR,oBAAO,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IACjB,CAAC,MAAI;MACH,oBAAO,QAAC,gBAAgB;QAAC,SAAS,EAAE;UAAC,YAAY,EAAEA,MAAM;UAAE,mBAAmB,EAAEE;QAAgB;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IACvG;EACF,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,EAAEO,YAAY;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3C,QAAC,KAAK;QAAC,IAAI,EAAC,eAAe;QAAC,OAAO,eAAE,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eACzD,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACrC;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAnCQV,GAAG;AAAA,KAAHA,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}