{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { getAuth } from \"firebase/auth\";\nimport '../styles/TaskAnalytics.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskAnalytics() {\n  _s();\n  const {\n    taskId\n  } = useParams();\n  const [taskElement, setTaskElement] = useState({});\n  const [user, setUser] = useState(getAuth().currentUser);\n  const fetchTask = async () => {\n    console.log('INSIDE');\n    const res = await axios.get('http://localhost:4000/api/getTask', {\n      params: {\n        userId: user.uid,\n        taskId: taskId\n      },\n      headers: {\n        Authorization: `Bearer ${user.accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    setTaskElement(res.data);\n  };\n  useEffect(() => {\n    if (user) {\n      fetchTask();\n    }\n  }, [user]);\n  const shouldDisplayData = () => {\n    if (taskElement !== {} && taskElement.taskTitle !== undefined) {\n      console.log(taskElement.taskTitle);\n      // return (\n      //     <div className='TaskAnalyticsContainer'>\n      //         <div className='TaskAnalyticsTaskDetailsContainer'>\n      //             <p className='TaskCardCategoryElement'>{taskElement.taskCategory}</p>\n      //             <p className='TaskCardTitleElement'>{taskElement.taskTitle}</p>\n      //             <div className='TaskCardKeywordsContainer'>\n      //                 {taskElement.taskKeywords.split(',').map((keyword)=>{\n      //                     if(keyword){\n      //                         return <p key={keyword} className='TaskCardKeywordElement'>{keyword}</p>\n      //                     }\n      //                 })}\n      //             </div>\n      //         </div>\n      //     </div>\n      // )\n    } else {\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: shouldDisplayData()\n  }, void 0, false);\n}\n_s(TaskAnalytics, \"C+WBvfecsQbCNuuQNKpWinquoGo=\", false, function () {\n  return [useParams];\n});\n_c = TaskAnalytics;\nexport default TaskAnalytics;\nvar _c;\n$RefreshReg$(_c, \"TaskAnalytics\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useParams","axios","getAuth","TaskAnalytics","taskId","taskElement","setTaskElement","user","setUser","currentUser","fetchTask","console","log","res","get","params","userId","uid","headers","Authorization","accessToken","data","shouldDisplayData","taskTitle","undefined"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskAnalytics.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from 'axios'\nimport { getAuth } from \"firebase/auth\";\nimport '../styles/TaskAnalytics.css' \n\nfunction TaskAnalytics() {\n    \n    \n    \n    const {taskId} = useParams()\n    const [taskElement, setTaskElement] = useState({})\n    const [user, setUser] = useState(getAuth().currentUser)\n    \n    \n    const fetchTask = async () =>{\n        console.log('INSIDE')\n        const res = await axios.get('http://localhost:4000/api/getTask', {\n                    params: { userId: user.uid, taskId: taskId },\n                    headers: {\n                        Authorization: `Bearer ${user.accessToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                })\n    \n        setTaskElement(res.data)\n    }\n    \n    useEffect(()=>{\n        if(user){\n            fetchTask()\n        }\n    }, [user])\n\n    const shouldDisplayData = () =>{\n        if(taskElement !== {} && taskElement.taskTitle !== undefined){\n            console.log(taskElement.taskTitle)\n            // return (\n            //     <div className='TaskAnalyticsContainer'>\n            //         <div className='TaskAnalyticsTaskDetailsContainer'>\n            //             <p className='TaskCardCategoryElement'>{taskElement.taskCategory}</p>\n            //             <p className='TaskCardTitleElement'>{taskElement.taskTitle}</p>\n            //             <div className='TaskCardKeywordsContainer'>\n            //                 {taskElement.taskKeywords.split(',').map((keyword)=>{\n            //                     if(keyword){\n            //                         return <p key={keyword} className='TaskCardKeywordElement'>{keyword}</p>\n            //                     }\n            //                 })}\n            //             </div>\n            //         </div>\n            //     </div>\n            // )\n        }else{\n            return null\n        }\n    }\n\n    return (\n        <>\n          {shouldDisplayData()}\n        </>\n    )\n}\n\nexport default TaskAnalytics"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAO,6BAA6B;AAAA;AAAA;AAEpC,SAASC,aAAa,GAAG;EAAA;EAIrB,MAAM;IAACC;EAAM,CAAC,GAAGJ,SAAS,EAAE;EAC5B,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACG,OAAO,EAAE,CAACO,WAAW,CAAC;EAGvD,MAAMC,SAAS,GAAG,YAAW;IACzBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,mCAAmC,EAAE;MACrDC,MAAM,EAAE;QAAEC,MAAM,EAAET,IAAI,CAACU,GAAG;QAAEb,MAAM,EAAEA;MAAO,CAAC;MAC5Cc,OAAO,EAAE;QACLC,aAAa,EAAG,UAASZ,IAAI,CAACa,WAAY,EAAC;QAC3C,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEVd,cAAc,CAACO,GAAG,CAACQ,IAAI,CAAC;EAC5B,CAAC;EAEDxB,SAAS,CAAC,MAAI;IACV,IAAGU,IAAI,EAAC;MACJG,SAAS,EAAE;IACf;EACJ,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,MAAMe,iBAAiB,GAAG,MAAK;IAC3B,IAAGjB,WAAW,KAAK,CAAC,CAAC,IAAIA,WAAW,CAACkB,SAAS,KAAKC,SAAS,EAAC;MACzDb,OAAO,CAACC,GAAG,CAACP,WAAW,CAACkB,SAAS,CAAC;MAClC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,MAAI;MACD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,oBACI;IAAA,UACGD,iBAAiB;EAAE,iBACnB;AAEX;AAAC,GAxDQnB,aAAa;EAAA,QAIDH,SAAS;AAAA;AAAA,KAJrBG,aAAa;AA0DtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}