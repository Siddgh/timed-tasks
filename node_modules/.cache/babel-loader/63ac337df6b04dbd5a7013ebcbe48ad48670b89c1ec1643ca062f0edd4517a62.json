{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskLists.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TaskLists.css';\nimport AddTask from './AddTask';\nimport TaskElement from './TaskElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskLists(_ref) {\n  _s();\n  let {\n    token,\n    user\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasksListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n      token: token,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalAndTaskWrapperContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalAndTaskWrapperItem\",\n        children: \"This is where I'll show my tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalAndTaskWrapperItem popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalElementsContainer\",\n          children: /*#__PURE__*/_jsxDEV(TaskElement, {\n            bToken: token,\n            user: user,\n            setIsModalOpen: setIsModalOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskLists, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = TaskLists;\nexport default TaskLists;\nvar _c;\n$RefreshReg$(_c, \"TaskLists\");","map":{"version":3,"names":["React","useState","AddTask","TaskElement","TaskLists","token","user","isModalOpen","setIsModalOpen"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskLists.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/TaskLists.css'\nimport AddTask from './AddTask'\nimport TaskElement from './TaskElement'\n\nfunction TaskLists({token, user}) {\n\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n\n  return (\n    <div className='tasksListContainer'>\n      <AddTask token={token} user={user}/>\n      <div className='modalAndTaskWrapperContainer'>\n        <div className='modalAndTaskWrapperItem'>This is where I'll show my tasks</div>\n        <div className='modalAndTaskWrapperItem popup'>\n          <div className='modalElementsContainer'>\n            <TaskElement bToken={token} user={user} setIsModalOpen={setIsModalOpen}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TaskLists"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAA;AAEvC,SAASC,SAAS,OAAgB;EAAA;EAAA,IAAf;IAACC,KAAK;IAAEC;EAAI,CAAC;EAE9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAGrD,oBACE;IAAK,SAAS,EAAC,oBAAoB;IAAA,wBACjC,QAAC,OAAO;MAAC,KAAK,EAAEI,KAAM;MAAC,IAAI,EAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACpC;MAAK,SAAS,EAAC,8BAA8B;MAAA,wBAC3C;QAAK,SAAS,EAAC,yBAAyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuC,eAC/E;QAAK,SAAS,EAAC,+BAA+B;QAAA,uBAC5C;UAAK,SAAS,EAAC,wBAAwB;UAAA,uBACrC,QAAC,WAAW;YAAC,MAAM,EAAED,KAAM;YAAC,IAAI,EAAEC,IAAK;YAAC,cAAc,EAAEE;UAAe;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA;MACrE;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAlBQJ,SAAS;AAAA,KAATA,SAAS;AAoBlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}