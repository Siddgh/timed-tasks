{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskStack.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport '../styles/TaskStack.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskStack(_ref) {\n  _s();\n  let {\n    token,\n    user\n  } = _ref;\n  const [fetchDate, setFetchDate] = useState('Today');\n  const [taskList, setTaskList] = useState([]);\n  const isDateInputVisible = () => {\n    if (fetchDate == 'Specific Date') {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"TaskStackDateSelectorDateElement\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    } else {\n      return null;\n    }\n  };\n  const fetchTasks = async () => {\n    if (token) {\n      const res = await axios.get('http://localhost:4000/api/gettasklist', {\n        params: {\n          userId: user.uid\n        },\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setTaskList(res.data);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [token, fetchDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskStackDateSelectorContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TaskStackDateSelectorParagraphElement\",\n        children: \"Tasks Due for\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"TaskStackDateSelectorSelectElement\",\n        onChange: e => setFetchDate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Today\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Yesterday\",\n          children: \"Yesterday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Tomorrow\",\n          children: \"Tomorrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Specific Date\",\n          children: \"Specific Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), isDateInputVisible()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskStackTaskListContainer\",\n      children: taskList.forEach(task => {\n        {\n          console.log(task);\n        }\n        /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskStack, \"MCtiURI7of+UMuD7+ue4RkX1Wf8=\");\n_c = TaskStack;\nexport default TaskStack;\nvar _c;\n$RefreshReg$(_c, \"TaskStack\");","map":{"version":3,"names":["axios","React","useEffect","useMemo","useState","TaskStack","token","user","fetchDate","setFetchDate","taskList","setTaskList","isDateInputVisible","fetchTasks","res","get","params","userId","uid","headers","Authorization","data","e","target","value","forEach","task","console","log","taskTitle"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskStack.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport '../styles/TaskStack.css'\n\nfunction TaskStack({token, user}) {\n    const [fetchDate, setFetchDate] = useState('Today')\n    const [taskList, setTaskList] = useState([])\n\n    const isDateInputVisible = () =>{\n        if(fetchDate == 'Specific Date'){\n            return <input className='TaskStackDateSelectorDateElement' type='date' />\n        }else{\n            return null\n        }\n    }\n\n    const fetchTasks = async () =>{\n        if(token){\n            const res = await axios.get('http://localhost:4000/api/gettasklist', {\n                params: { userId: user.uid },\n                headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                },\n            })\n            setTaskList(res.data)\n        }\n    }\n\n    useEffect(()=>{\n        fetchTasks()\n    }, [token,fetchDate])\n\n    return (\n        <>\n            <div className='TaskStackDateSelectorContainer'>\n                <p className='TaskStackDateSelectorParagraphElement'>Tasks Due for</p>\n                <select className='TaskStackDateSelectorSelectElement' onChange={(e) => setFetchDate(e.target.value)}>\n                    <option value=\"Today\">Today</option>\n                    <option value=\"Yesterday\">Yesterday</option>\n                    <option value=\"Tomorrow\">Tomorrow</option>\n                    <option value=\"Specific Date\">Specific Date</option>\n                </select>\n                {isDateInputVisible()}\n            </div>\n            <div className='TaskStackTaskListContainer'>\n                {taskList.forEach((task)=>{\n                    {console.log(task)}\n                    <p>{task.taskTitle}</p>\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default TaskStack"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAO,yBAAyB;AAAA;AAAA;AAEhC,SAASC,SAAS,OAAgB;EAAA;EAAA,IAAf;IAACC,KAAK;IAAEC;EAAI,CAAC;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,kBAAkB,GAAG,MAAK;IAC5B,IAAGJ,SAAS,IAAI,eAAe,EAAC;MAC5B,oBAAO;QAAO,SAAS,EAAC,kCAAkC;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAC7E,CAAC,MAAI;MACD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAMK,UAAU,GAAG,YAAW;IAC1B,IAAGP,KAAK,EAAC;MACL,MAAMQ,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,uCAAuC,EAAE;QACjEC,MAAM,EAAE;UAAEC,MAAM,EAAEV,IAAI,CAACW;QAAI,CAAC;QAC5BC,OAAO,EAAE;UACTC,aAAa,EAAG,UAASd,KAAM,EAAC;UAChC,cAAc,EAAE;QAChB;MACJ,CAAC,CAAC;MACFK,WAAW,CAACG,GAAG,CAACO,IAAI,CAAC;IACzB;EACJ,CAAC;EAEDnB,SAAS,CAAC,MAAI;IACVW,UAAU,EAAE;EAChB,CAAC,EAAE,CAACP,KAAK,EAACE,SAAS,CAAC,CAAC;EAErB,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,gCAAgC;MAAA,wBAC3C;QAAG,SAAS,EAAC,uCAAuC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACtE;QAAQ,SAAS,EAAC,oCAAoC;QAAC,QAAQ,EAAGc,CAAC,IAAKb,YAAY,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAA,wBACjG;UAAQ,KAAK,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eACpC;UAAQ,KAAK,EAAC,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC5C;UAAQ,KAAK,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC1C;UAAQ,KAAK,EAAC,eAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,EACRZ,kBAAkB,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB,eACN;MAAK,SAAS,EAAC,4BAA4B;MAAA,UACtCF,QAAQ,CAACe,OAAO,CAAEC,IAAI,IAAG;QACtB;UAACC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QAAA;QAClB;UAAA,UAAIA,IAAI,CAACG;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK;MAC3B,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACP;AAEX;AAAC,GAjDQxB,SAAS;AAAA,KAATA,SAAS;AAmDlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}