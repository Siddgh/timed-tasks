{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/github/timedtasks/src/components/ChartsYearly.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nfunction ChartsYearly(_ref) {\n  _s();\n  let {\n    user,\n    task\n  } = _ref;\n  const [initialFetch, setInitialFetch] = useState(false);\n  const [graphData, setGraphData] = useState({});\n  const fetchDailyLogs = async () => {\n    setInitialFetch(true);\n    const res = await axios.get('https://timedtask-server.up.railway.app/api/getYearlyLogs', {\n      params: {\n        userId: user.uid,\n        taskId: task.taskId\n      },\n      headers: {\n        Authorization: `Bearer ${user.accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const labels = [];\n    const timeValues = [];\n    res.data.map(element => {\n      labels.push(element.year);\n      timeValues.push(element.time / 60 / 60);\n      return null;\n    });\n    const colors = ['#3fb5a3', '#3f51b5'];\n    const dataForGraph = {\n      labels: labels,\n      datasets: [{\n        fill: true,\n        label: task.taskTitle,\n        backgroundColor: colors,\n        borderColor: colors,\n        data: timeValues\n      }]\n    };\n    setGraphData(dataForGraph);\n  };\n  useEffect(() => {\n    if (initialFetch === false) {\n      fetchDailyLogs();\n    }\n  }, [graphData]);\n  const displayGraphs = () => {\n    if (graphData.labels !== undefined && graphData.labels.length > 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BarGraphContainer\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              maintainAspectRatio: false\n            },\n            className: \"TaskAnalyticsDailyBarGraphElement\",\n            data: graphData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BarGraphContainer\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            options: {\n              maintainAspectRatio: false\n            },\n            className: \"TaskAnalyticsDailyBarGraphElement\",\n            data: graphData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BarGraphContainer\",\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            options: {\n              maintainAspectRatio: false\n            },\n            className: \"TaskAnalyticsDailyBarGraphElement\",\n            data: graphData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else {\n      return null;\n    }\n  };\n  return displayGraphs();\n}\n_s(ChartsYearly, \"O00P6jKJjIC/ABRfOxHiNzI4l0E=\");\n_c = ChartsYearly;\nexport default ChartsYearly;\nvar _c;\n$RefreshReg$(_c, \"ChartsYearly\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Line","Doughnut","Chart","registerables","axios","register","ChartsYearly","user","task","initialFetch","setInitialFetch","graphData","setGraphData","fetchDailyLogs","res","get","params","userId","uid","taskId","headers","Authorization","accessToken","labels","timeValues","data","map","element","push","year","time","colors","dataForGraph","datasets","fill","label","taskTitle","backgroundColor","borderColor","displayGraphs","undefined","length","maintainAspectRatio"],"sources":["/Users/sidd/Documents/github/timedtasks/src/components/ChartsYearly.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Bar, Line, Doughnut} from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios'\n\nChart.register(...registerables);\n\nfunction ChartsYearly({user, task}) {\n    const [initialFetch, setInitialFetch] = useState(false)\n    const [graphData, setGraphData] = useState({})\n\n    const fetchDailyLogs = async () =>{\n        setInitialFetch(true)\n        const res = await axios.get('https://timedtask-server.up.railway.app/api/getYearlyLogs', {\n            params: { userId: user.uid, taskId: task.taskId },\n            headers: {\n                Authorization: `Bearer ${user.accessToken}`,\n                'Content-Type': 'application/json',\n            },\n        })\n        const labels = []\n        const timeValues = []\n        res.data.map((element)=>{\n            labels.push(element.year)\n            timeValues.push(((element.time / 60) / 60))\n            return null\n        })\n        \n        const colors=['#3fb5a3', '#3f51b5']\n        const dataForGraph = {\n            labels: labels,\n            datasets: [\n            {\n                fill: true,\n                label: task.taskTitle,\n                backgroundColor: colors,\n                borderColor: colors,\n                data: timeValues,\n            },\n            ],\n        }\n\n        setGraphData(dataForGraph)\n\n    }\n    \n    useEffect(()=>{\n        if(initialFetch === false){\n            fetchDailyLogs()\n        }\n    },[graphData])\n\n    const displayGraphs = () => {\n        if(graphData.labels !== undefined && graphData.labels.length > 0){\n            return(\n                <>\n                <div className='BarGraphContainer'>\n                    <Bar options={{ maintainAspectRatio: false }} className=\"TaskAnalyticsDailyBarGraphElement\" data={graphData} />\n                </div>\n                <div className='BarGraphContainer'>\n                    <Line options={{ maintainAspectRatio: false }} className=\"TaskAnalyticsDailyBarGraphElement\" data={graphData} />\n                </div>\n                <div className='BarGraphContainer'>\n                    <Doughnut options={{ maintainAspectRatio: false }} className=\"TaskAnalyticsDailyBarGraphElement\" data={graphData} />\n                </div>\n                </>\n            )\n        }else{\n            return null\n        }\n    }\n    return (\n       displayGraphs()\n    )\n}\n\nexport default ChartsYearly"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}