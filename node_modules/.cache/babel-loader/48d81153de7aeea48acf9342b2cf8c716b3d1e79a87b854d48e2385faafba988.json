{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskStack.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport '../styles/TaskStack.css';\nimport TaskCard from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskStack(_ref) {\n  _s();\n  let {\n    token,\n    user,\n    modalStatus\n  } = _ref;\n  const [fetchDate, setFetchDate] = useState('All');\n  const [taskList, setTaskList] = useState([]);\n  const isDateInputVisible = () => {\n    if (fetchDate == 'Specific Date') {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"TaskStackDateSelectorDateElement\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this);\n    } else {\n      return null;\n    }\n  };\n  const fetchTasks = async () => {\n    if (token) {\n      const res = await axios.get('http://localhost:4000/api/gettasklist', {\n        params: {\n          userId: user.uid\n        },\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setTaskList(res.data);\n    }\n  };\n  useEffect(() => {\n    if (modalStatus === false) {\n      fetchTasks(fetchDate);\n    }\n  }, [token, fetchDate, modalStatus]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskStackDateSelectorContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TaskStackDateSelectorParagraphElement\",\n        children: \"Tasks Due for\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"TaskStackDateSelectorSelectElement\",\n        onChange: e => setFetchDate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Today\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Yesterday\",\n          children: \"Yesterday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Tomorrow\",\n          children: \"Tomorrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Specific Date\",\n          children: \"Specific Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), isDateInputVisible()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskStackTaskListContainer\",\n      children: taskList.map(task => {\n        return /*#__PURE__*/_jsxDEV(TaskCard, {\n          task: task\n        }, task.taskId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskStack, \"LkgHfbThj2zIL0N9pRpUHcl+Ht0=\");\n_c = TaskStack;\nexport default TaskStack;\nvar _c;\n$RefreshReg$(_c, \"TaskStack\");","map":{"version":3,"names":["axios","React","useEffect","useMemo","useState","TaskCard","TaskStack","token","user","modalStatus","fetchDate","setFetchDate","taskList","setTaskList","isDateInputVisible","fetchTasks","res","get","params","userId","uid","headers","Authorization","data","e","target","value","map","task","taskId"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskStack.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport '../styles/TaskStack.css'\nimport TaskCard from './TaskCard'\n\nfunction TaskStack({token, user, modalStatus}) {\n    const [fetchDate, setFetchDate] = useState('All')\n    const [taskList, setTaskList] = useState([])\n\n    const isDateInputVisible = () =>{\n        if(fetchDate == 'Specific Date'){\n            return <input className='TaskStackDateSelectorDateElement' type='date' />\n        }else{\n            return null\n        }\n    }\n\n    const fetchTasks = async () =>{\n        if(token){\n            const res = await axios.get('http://localhost:4000/api/gettasklist', {\n                params: { userId: user.uid },\n                headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                },\n            })\n            setTaskList(res.data)\n        }\n    }\n\n    useEffect(()=>{\n        if(modalStatus === false){\n            fetchTasks(fetchDate)\n        }\n    }, [token,fetchDate, modalStatus])\n\n    return (\n        <>\n            <div className='TaskStackDateSelectorContainer'>\n                <p className='TaskStackDateSelectorParagraphElement'>Tasks Due for</p>\n                <select className='TaskStackDateSelectorSelectElement' onChange={(e) => setFetchDate(e.target.value)}>\n                    <option value=\"All\">All</option>\n                    <option value=\"Today\">Today</option>\n                    <option value=\"Yesterday\">Yesterday</option>\n                    <option value=\"Tomorrow\">Tomorrow</option>\n                    <option value=\"Specific Date\">Specific Date</option>\n                </select>\n                {isDateInputVisible()}\n            </div>\n            <div className='TaskStackTaskListContainer'>\n                {taskList.map((task)=>{\n                    return <TaskCard key={task.taskId} task={task}/>\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default TaskStack"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAO,yBAAyB;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAAA;AAEjC,SAASC,SAAS,OAA6B;EAAA;EAAA,IAA5B;IAACC,KAAK;IAAEC,IAAI;IAAEC;EAAW,CAAC;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,kBAAkB,GAAG,MAAK;IAC5B,IAAGJ,SAAS,IAAI,eAAe,EAAC;MAC5B,oBAAO;QAAO,SAAS,EAAC,kCAAkC;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAC7E,CAAC,MAAI;MACD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAMK,UAAU,GAAG,YAAW;IAC1B,IAAGR,KAAK,EAAC;MACL,MAAMS,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,uCAAuC,EAAE;QACjEC,MAAM,EAAE;UAAEC,MAAM,EAAEX,IAAI,CAACY;QAAI,CAAC;QAC5BC,OAAO,EAAE;UACTC,aAAa,EAAG,UAASf,KAAM,EAAC;UAChC,cAAc,EAAE;QAChB;MACJ,CAAC,CAAC;MACFM,WAAW,CAACG,GAAG,CAACO,IAAI,CAAC;IACzB;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAI;IACV,IAAGO,WAAW,KAAK,KAAK,EAAC;MACrBM,UAAU,CAACL,SAAS,CAAC;IACzB;EACJ,CAAC,EAAE,CAACH,KAAK,EAACG,SAAS,EAAED,WAAW,CAAC,CAAC;EAElC,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,gCAAgC;MAAA,wBAC3C;QAAG,SAAS,EAAC,uCAAuC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACtE;QAAQ,SAAS,EAAC,oCAAoC;QAAC,QAAQ,EAAGe,CAAC,IAAKb,YAAY,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAA,wBACjG;UAAQ,KAAK,EAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAChC;UAAQ,KAAK,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eACpC;UAAQ,KAAK,EAAC,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC5C;UAAQ,KAAK,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC1C;UAAQ,KAAK,EAAC,eAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,EACRZ,kBAAkB,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB,eACN;MAAK,SAAS,EAAC,4BAA4B;MAAA,UACtCF,QAAQ,CAACe,GAAG,CAAEC,IAAI,IAAG;QAClB,oBAAO,QAAC,QAAQ;UAAmB,IAAI,EAAEA;QAAK,GAAxBA,IAAI,CAACC,MAAM;UAAA;UAAA;UAAA;QAAA,QAAe;MACpD,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACP;AAEX;AAAC,GAnDQvB,SAAS;AAAA,KAATA,SAAS;AAqDlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}