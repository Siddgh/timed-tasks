{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskTimer() {\n  _s();\n  const [isTimerOn, setIsTimerOn] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setSeconds(seconds + 1);\n      if (seconds == 59) {\n        setMinutes(minutes + 1);\n        setSeconds(0);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [setIsTimerOn]);\n  const handlePlayButtonClick = e => {\n    setIsTimerOn(true);\n  };\n  const handleStopButtonClick = e => {\n    setIsTimerOn(false);\n  };\n  const displayButtonByTimerStatus = () => {\n    if (isTimerOn) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"TaskCardTimerElement\",\n          children: [minutes < 10 ? `0${minutes}` : minutes, \":\", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"material-icons TaskCardPlayElement\",\n          onClick: handleStopButtonClick,\n          children: \"stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"material-icons TaskCardPlayElement\",\n        onClick: handlePlayButtonClick,\n        children: \"play_arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskCardTimerContainer\",\n    children: displayButtonByTimerStatus()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskTimer, \"fxDkV69jdlBdOlnFvmkBCB+5qsI=\");\n_c = TaskTimer;\nexport default TaskTimer;\nvar _c;\n$RefreshReg$(_c, \"TaskTimer\");","map":{"version":3,"names":["React","useEffect","useState","TaskTimer","isTimerOn","setIsTimerOn","seconds","setSeconds","minutes","setMinutes","timer","setInterval","clearInterval","handlePlayButtonClick","e","handleStopButtonClick","displayButtonByTimerStatus"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskTimer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction TaskTimer() {\n\n    const [isTimerOn, setIsTimerOn] = useState(false)\n    const [seconds, setSeconds] = useState(0)\n    const [minutes, setMinutes] = useState(0)\n\n    useEffect(()=>{\n        const timer = setInterval(()=>{\n            setSeconds(seconds + 1)\n\n            if(seconds == 59){\n                setMinutes(minutes + 1)\n                setSeconds(0)\n            }\n\n        }, 1000)\n\n        return ()=>{\n            clearInterval(timer)\n        }\n    }, [setIsTimerOn])\n\n    const handlePlayButtonClick = (e) =>{\n        setIsTimerOn(true)\n    }\n\n    const handleStopButtonClick = (e) =>{\n        setIsTimerOn(false)\n    }\n\n    const displayButtonByTimerStatus = () =>{\n        if(isTimerOn){\n            return (\n                <>\n                <span className='TaskCardTimerElement'>{minutes < 10? `0${minutes}` : minutes}:{seconds}</span>\n                <button className='material-icons TaskCardPlayElement' onClick={handleStopButtonClick}>stop</button>\n                </>\n            )\n        }else{\n            return <button className='material-icons TaskCardPlayElement' onClick={handlePlayButtonClick}>play_arrow</button>\n        }\n    }\n\n    return (\n        <div className='TaskCardTimerContainer'>\n            {displayButtonByTimerStatus()}\n        </div>\n    )\n}\n\nexport default TaskTimer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAElD,SAASC,SAAS,GAAG;EAAA;EAEjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEzCD,SAAS,CAAC,MAAI;IACV,MAAMS,KAAK,GAAGC,WAAW,CAAC,MAAI;MAC1BJ,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MAEvB,IAAGA,OAAO,IAAI,EAAE,EAAC;QACbG,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;QACvBD,UAAU,CAAC,CAAC,CAAC;MACjB;IAEJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAI;MACPK,aAAa,CAACF,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAElB,MAAMQ,qBAAqB,GAAIC,CAAC,IAAI;IAChCT,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMU,qBAAqB,GAAID,CAAC,IAAI;IAChCT,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMW,0BAA0B,GAAG,MAAK;IACpC,IAAGZ,SAAS,EAAC;MACT,oBACI;QAAA,wBACA;UAAM,SAAS,EAAC,sBAAsB;UAAA,WAAEI,OAAO,GAAG,EAAE,GAAG,IAAGA,OAAQ,EAAC,GAAGA,OAAO,OAAGF,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC/F;UAAQ,SAAS,EAAC,oCAAoC;UAAC,OAAO,EAAES,qBAAsB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA,gBACjG;IAEX,CAAC,MAAI;MACD,oBAAO;QAAQ,SAAS,EAAC,oCAAoC;QAAC,OAAO,EAAEF,qBAAsB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IACrH;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,wBAAwB;IAAA,UAClCG,0BAA0B;EAAE;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEd;AAAC,GAhDQb,SAAS;AAAA,KAATA,SAAS;AAkDlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}