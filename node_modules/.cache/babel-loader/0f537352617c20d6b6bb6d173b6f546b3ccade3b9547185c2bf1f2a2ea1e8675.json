{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskElement.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useId, useState } from 'react';\nimport '../styles/TaskElement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskElement(_ref) {\n  _s();\n  let {\n    bToken,\n    user,\n    setIsModalOpen\n  } = _ref;\n  const token = bToken;\n  const todayDate = new Date();\n  const formatDate = todayDate.getDate() < 10 ? `0${todayDate.getDate()}` : todayDate.getDate();\n  const formatMonth = todayDate.getMonth() + 1 < 10 ? `0${todayDate.getMonth() + 1}` : todayDate.getMonth() + 1;\n  const formattedDate = [todayDate.getFullYear(), formatMonth, formatDate].join('-');\n  const [task, setTask] = useState({\n    taskTitle: '',\n    taskCategory: '',\n    taskKeywords: '',\n    taskTimer: 0,\n    taskRevisionDate: formattedDate\n  });\n  const [validateTitle, setValidateTitle] = useState('-1');\n  const [validateCategory, setValidateCategory] = useState('-1');\n  const handleModalClearButton = () => {\n    setIsModalOpen(false);\n  };\n  const inputValidations = e => {\n    e.preventDefault();\n    if (!task.taskTitle) {\n      setValidateTitle('Title Can\\'t be Empty');\n    }\n    if (!task.taskCategory) {\n      setValidateCategory('Category Can\\'t be Empty');\n    }\n    if (task.taskTitle && task.taskCategory) {\n      handleTaskCreation();\n    }\n  };\n  const handleTaskCreation = async e => {\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n\n    //const count = await axios.get('http://localhost:4000/api/gettaskscount',{ params: { userId: user.userId } }, {headers: headers})\n    const countData = await axios.get('http://localhost:4000/api/gettaskscount', {\n      params: {\n        userId: user.uid\n      },\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const count = countData.data.count;\n    const taskData = {\n      userId: user.uid,\n      taskId: `task${count + 1}`,\n      ...task\n    };\n    axios.post('http://localhost:4000/api/createtasks', taskData, {\n      headers: headers\n    }).then(() => setIsModalOpen(false)).catch(e => console.log(e.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskElementContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormElementContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: inputValidations,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TaskElementTitle\",\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskElementIndividualContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"TaskElement\",\n            type: \"text\",\n            placeholder: \"Task Title\",\n            value: task.taskTitle,\n            onChange: e => setTask({\n              ...task,\n              taskTitle: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), validateTitle !== '-1' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"TaskElementErrorHighlighterElement\",\n            children: validateTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 50\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskElementIndividualContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"TaskElement\",\n            type: \"text\",\n            placeholder: \"Category\",\n            value: task.taskCategory,\n            onChange: e => setTask({\n              ...task,\n              taskCategory: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), validateCategory !== '-1' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"TaskElementErrorHighlighterElement\",\n            children: validateCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 53\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskElementIndividualContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"TaskElement\",\n            type: \"text\",\n            placeholder: \"keywords\",\n            value: task.taskKeywords,\n            onChange: e => setTask({\n              ...task,\n              taskKeywords: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskElementIndividualContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"TaskElement\",\n            type: \"date\",\n            placeholder: \"Next Revision Date\",\n            value: task.taskRevisionDate,\n            onChange: e => setTask({\n              ...task,\n              taskRevisionDate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskElementIndividualContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"TaskElement\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ClearButtonTaskElementContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"TaskElement\",\n          onClick: handleModalClearButton,\n          type: \"cancel\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskElement, \"6A6TnTw0SpLnlmBLkLr6Kprfq7w=\");\n_c = TaskElement;\nvar _c;\n$RefreshReg$(_c, \"TaskElement\");","map":{"version":3,"names":["axios","React","useId","useState","TaskElement","bToken","user","setIsModalOpen","token","todayDate","Date","formatDate","getDate","formatMonth","getMonth","formattedDate","getFullYear","join","task","setTask","taskTitle","taskCategory","taskKeywords","taskTimer","taskRevisionDate","validateTitle","setValidateTitle","validateCategory","setValidateCategory","handleModalClearButton","inputValidations","e","preventDefault","handleTaskCreation","headers","Authorization","countData","get","params","userId","uid","count","data","taskData","taskId","post","then","catch","console","log","message","target","value"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskElement.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useId, useState } from 'react'\n\nimport '../styles/TaskElement.css'\n\nexport default function TaskElement({bToken, user, setIsModalOpen}) {\n    const token = bToken\n\n    const todayDate = new Date(); \n    const formatDate = todayDate.getDate() < 10 ? `0${todayDate.getDate()}`:todayDate.getDate();\n    const formatMonth = todayDate.getMonth() + 1 < 10 ? `0${todayDate.getMonth() + 1}`: todayDate.getMonth() + 1;\n    const formattedDate = [todayDate.getFullYear(), formatMonth, formatDate].join('-');\n\n    const [task, setTask] = useState({\n        taskTitle: '',\n        taskCategory: '',\n        taskKeywords: '',\n        taskTimer: 0,\n        taskRevisionDate: formattedDate\n    })\n\n    const [validateTitle, setValidateTitle] = useState('-1')\n    const [validateCategory, setValidateCategory] = useState('-1')\n\n    const handleModalClearButton = () => {\n        setIsModalOpen(false)\n    }\n\n    const inputValidations = (e) => {\n        e.preventDefault()\n        if(!task.taskTitle){\n            setValidateTitle('Title Can\\'t be Empty')\n        }\n        if(!task.taskCategory){\n            setValidateCategory('Category Can\\'t be Empty')\n        }\n        if(task.taskTitle && task.taskCategory){\n            handleTaskCreation()\n        }\n    }\n\n    const handleTaskCreation = async (e) => {\n        const headers = {Authorization: `Bearer ${token}`}\n        \n        //const count = await axios.get('http://localhost:4000/api/gettaskscount',{ params: { userId: user.userId } }, {headers: headers})\n        const countData = await axios.get('http://localhost:4000/api/gettaskscount', {\n            params: { userId: user.uid },\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n        })\n        \n        const count = countData.data.count\n        const taskData = {userId: user.uid, taskId: `task${count + 1}`, ...task}\n        axios\n            .post('http://localhost:4000/api/createtasks', taskData, {headers: headers})\n            .then(() => setIsModalOpen(false))\n            .catch((e) => console.log(e.message))\n    \n        } \n\n  return (\n    <div className=\"TaskElementContainer\">\n            <div className='FormElementContainer'>\n                <form onSubmit={inputValidations}>\n                    <p className='TaskElementTitle'>Add New Task</p>\n                    <div className='TaskElementIndividualContainer'>\n                        <input className='TaskElement' type='text' placeholder='Task Title' value={task.taskTitle} \n                        onChange={e => setTask({...task,taskTitle : e.target.value})}/>\n                        {validateTitle !== '-1'? <span className='TaskElementErrorHighlighterElement'>{validateTitle}</span> : null}\n                    </div>\n                    \n                    <div className='TaskElementIndividualContainer'>\n                        <input className='TaskElement' type='text' placeholder='Category' value={task.taskCategory}onChange={e => setTask({...task,taskCategory : e.target.value})}/>\n                        {validateCategory !== '-1'? <span className='TaskElementErrorHighlighterElement'>{validateCategory}</span> : null}\n                    </div>\n                    <div className='TaskElementIndividualContainer'>\n                        <input className='TaskElement' type='text' placeholder='keywords' value={task.taskKeywords}onChange={e => setTask({...task,taskKeywords : e.target.value})}/>\n                    </div>\n                    <div className='TaskElementIndividualContainer'>\n                        <input className='TaskElement' type='date' placeholder='Next Revision Date' value={task.taskRevisionDate}onChange={e => setTask({...task,taskRevisionDate : e.target.value})}/>\n                    </div>\n                    \n                    <div className='TaskElementIndividualContainer'><button className='TaskElement' type='submit'>Add</button></div>\n                </form>\n                <div className='ClearButtonTaskElementContainer'><button className='TaskElement' onClick={handleModalClearButton} type='cancel'>Clear</button></div>\n            </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}