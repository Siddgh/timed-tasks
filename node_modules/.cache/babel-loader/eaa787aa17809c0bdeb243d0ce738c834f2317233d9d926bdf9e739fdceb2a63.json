{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskElement.js\",\n  _s = $RefreshSig$();\nimport React, { useId, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskElement() {\n  _s();\n  const todayDate = new Date();\n  const formatDate = todayDate.getDate() < 10 ? `0${todayDate.getDate()}` : todayDate.getDate();\n  const formatMonth = todayDate.getMonth() + 1 < 10 ? `0${todayDate.getMonth() + 1}` : todayDate.getMonth() + 1;\n  const formattedDate = [todayDate.getFullYear(), formatMonth, formatDate].join('-');\n  const [task, setTask] = useState({\n    taskId: '',\n    taskTitle: 'Leetcode',\n    taskCategroy: '218. Two Sum',\n    taskKeywords: 'Two Pointers, Array',\n    taskTimer: 0,\n    taskRevisionDate: formattedDate\n  });\n  const uniqueId = useId();\n  const handleTaskCreation = e => {\n    e.preventDefault();\n    setTask({\n      ...task,\n      taskId: `${uniqueId}-${task.taskTitle}`\n    });\n    console.log(task);\n    console.log(uniqueId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTaskCreation,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: task.taskTitle,\n        onChange: e => setTask({\n          ...task,\n          taskTitle: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        value: task.taskCategroy,\n        onChange: e => setTask({\n          ...task,\n          taskCategroy: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"keywords\",\n        value: task.taskKeywords,\n        onChange: e => setTask({\n          ...task,\n          taskKeywords: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Next Revision Date\",\n        value: task.taskRevisionDate,\n        onChange: e => setTask({\n          ...task,\n          taskRevisionDate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskElement, \"oz0XrR1UKxe3D5VnV5phdkgXIDM=\", false, function () {\n  return [useId];\n});\n_c = TaskElement;\nvar _c;\n$RefreshReg$(_c, \"TaskElement\");","map":{"version":3,"names":["React","useId","useState","TaskElement","todayDate","Date","formatDate","getDate","formatMonth","getMonth","formattedDate","getFullYear","join","task","setTask","taskId","taskTitle","taskCategroy","taskKeywords","taskTimer","taskRevisionDate","uniqueId","handleTaskCreation","e","preventDefault","console","log","target","value"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskElement.js"],"sourcesContent":["import React, { useId, useState } from 'react'\n\nexport default function TaskElement() {\n    \n    const todayDate = new Date(); \n    const formatDate = todayDate.getDate() < 10 ? `0${todayDate.getDate()}`:todayDate.getDate();\n    const formatMonth = todayDate.getMonth() + 1 < 10 ? `0${todayDate.getMonth() + 1}`: todayDate.getMonth() + 1;\n    const formattedDate = [todayDate.getFullYear(), formatMonth, formatDate].join('-');\n\n    const [task, setTask] = useState({\n        taskId: '',\n        taskTitle: 'Leetcode',\n        taskCategroy: '218. Two Sum',\n        taskKeywords: 'Two Pointers, Array',\n        taskTimer: 0,\n        taskRevisionDate: formattedDate\n    })\n\n    const uniqueId = useId()\n\n    const handleTaskCreation = (e) => {\n        e.preventDefault()\n        setTask({...task, taskId: `${uniqueId}-${task.taskTitle}`})\n\n        console.log(task)\n        console.log(uniqueId)\n    } \n\n  return (\n    <div>\n        <form onSubmit={handleTaskCreation}>\n            <input \n                type='text' \n                placeholder='Task Title' \n                value={task.taskTitle} \n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskTitle : e.target.value\n                    }\n                )}/>\n            \n            <input \n                type='text' \n                placeholder='Category' \n                value={task.taskCategroy}\n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskCategroy : e.target.value\n                    }\n                )}/>\n            \n            <input \n                type='text' \n                placeholder='keywords' \n                value={task.taskKeywords}\n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskKeywords : e.target.value\n                    }\n                )}/>\n            \n            <input \n                type='date' \n                placeholder='Next Revision Date' \n                value={task.taskRevisionDate}\n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskRevisionDate : e.target.value\n                    }\n                )}/>\n\n            <button type='submit'>Submit</button>\n        </form>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}