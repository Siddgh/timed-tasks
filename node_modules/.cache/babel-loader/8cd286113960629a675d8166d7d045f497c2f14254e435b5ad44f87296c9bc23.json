{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/BarChartDaily.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nfunction BarChartDaily(_ref) {\n  _s();\n  let {\n    user,\n    task\n  } = _ref;\n  const [userElement, setUserElement] = useState(user);\n  const [taskElement, setTaskElement] = useState(task);\n  const fetchDailyLogs = async () => {\n    console.log('Fetch');\n    // const res = await axios.get('http://localhost:4000/api/getDailyLogs', {\n    //     params: { userId: userElement.uid, taskId: taskElement.taskId },\n    //     headers: {\n    //         Authorization: `Bearer ${user.accessToken}`,\n    //         'Content-Type': 'application/json',\n    //     },\n    // })\n  };\n\n  useEffect(() => {\n    fetchDailyLogs();\n  }, []);\n  const labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"];\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: \"My First dataset\",\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgb(255, 99, 132)\",\n      data: [0, 10, 5, 2, 20, 30, 45]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello\", /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(BarChartDaily, \"WDbuP98yhsylYbYLOqAUhgQzIXg=\");\n_c = BarChartDaily;\nexport default BarChartDaily;\nvar _c;\n$RefreshReg$(_c, \"BarChartDaily\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","registerables","axios","register","BarChartDaily","user","task","userElement","setUserElement","taskElement","setTaskElement","fetchDailyLogs","console","log","labels","data","datasets","label","backgroundColor","borderColor"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/BarChartDaily.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Bar} from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios'\n\nChart.register(...registerables);\n\nfunction BarChartDaily({user, task}) {\n    \n    const [userElement, setUserElement] = useState(user)\n    const [taskElement, setTaskElement] = useState(task)\n\n    const fetchDailyLogs = async () =>{\n        console.log('Fetch')\n        // const res = await axios.get('http://localhost:4000/api/getDailyLogs', {\n        //     params: { userId: userElement.uid, taskId: taskElement.taskId },\n        //     headers: {\n        //         Authorization: `Bearer ${user.accessToken}`,\n        //         'Content-Type': 'application/json',\n        //     },\n        // })\n    }\n    \n    useEffect(()=>{\n        fetchDailyLogs()\n    },[])\n\n    const labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"];\n    const data = {\n        labels: labels,\n        datasets: [\n          {\n            label: \"My First dataset\",\n            backgroundColor: \"rgb(255, 99, 132)\",\n            borderColor: \"rgb(255, 99, 132)\",\n            data: [0, 10, 5, 2, 20, 30, 45],\n          },\n        ],\n      };\n    return (\n        <div>\n            Hello\n            <Bar data={data} />     \n        </div>\n    )\n}\n\nexport default BarChartDaily"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,GAAG,QAAO,iBAAiB;AACnC,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzBF,KAAK,CAACG,QAAQ,CAAC,GAAGF,aAAa,CAAC;AAEhC,SAASG,aAAa,OAAe;EAAA;EAAA,IAAd;IAACC,IAAI;IAAEC;EAAI,CAAC;EAE/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACO,IAAI,CAAC;EACpD,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACQ,IAAI,CAAC;EAEpD,MAAMK,cAAc,GAAG,YAAW;IAC9BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAEDhB,SAAS,CAAC,MAAI;IACVc,cAAc,EAAE;EACpB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMG,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;EACvE,MAAMC,IAAI,GAAG;IACTD,MAAM,EAAEA,MAAM;IACdE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzBC,eAAe,EAAE,mBAAmB;MACpCC,WAAW,EAAE,mBAAmB;MAChCJ,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAChC,CAAC;EAEL,CAAC;EACH,oBACI;IAAA,iCAEI,QAAC,GAAG;MAAC,IAAI,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACjB;AAEd;AAAC,GAtCQX,aAAa;AAAA,KAAbA,aAAa;AAwCtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}