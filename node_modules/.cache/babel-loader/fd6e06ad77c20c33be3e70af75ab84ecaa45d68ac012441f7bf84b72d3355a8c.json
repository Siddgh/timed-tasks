{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskElement.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useId, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskElement(props) {\n  _s();\n  const token = props.bToken;\n  const user = props.user;\n  const todayDate = new Date();\n  const formatDate = todayDate.getDate() < 10 ? `0${todayDate.getDate()}` : todayDate.getDate();\n  const formatMonth = todayDate.getMonth() + 1 < 10 ? `0${todayDate.getMonth() + 1}` : todayDate.getMonth() + 1;\n  const formattedDate = [todayDate.getFullYear(), formatMonth, formatDate].join('-');\n  const [task, setTask] = useState({\n    taskTitle: 'Leetcode',\n    taskCategory: '218. Two Sum',\n    taskKeywords: 'Two Pointers, Array',\n    taskTimer: 0,\n    taskRevisionDate: formattedDate\n  });\n  const uniqueId = useId();\n  const handleTaskCreation = async e => {\n    e.preventDefault();\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    const count = await axios.get('http://localhost:4000/api/gettaskscount', {\n      params: {\n        userId: user.userId\n      }\n    }, {\n      headers: headers\n    });\n    console.log(count);\n    //const taskData = {userId: user.userId, taskId: `task-${count}`, ...task}\n    // axios\n    //     .post('http://localhost:4000/api/createtasks', data, {headers: headers})\n    //     .then(() => console.log(\"Task Created\"))\n    //     .catch((e) => console.log(e.message))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTaskCreation,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: task.taskTitle,\n        onChange: e => setTask({\n          ...task,\n          taskTitle: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        value: task.taskCategory,\n        onChange: e => setTask({\n          ...task,\n          taskCategory: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"keywords\",\n        value: task.taskKeywords,\n        onChange: e => setTask({\n          ...task,\n          taskKeywords: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Next Revision Date\",\n        value: task.taskRevisionDate,\n        onChange: e => setTask({\n          ...task,\n          taskRevisionDate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskElement, \"A1E7mncBbx/G6miXPHcVhB3F/bI=\", false, function () {\n  return [useId];\n});\n_c = TaskElement;\nvar _c;\n$RefreshReg$(_c, \"TaskElement\");","map":{"version":3,"names":["axios","React","useId","useState","TaskElement","props","token","bToken","user","todayDate","Date","formatDate","getDate","formatMonth","getMonth","formattedDate","getFullYear","join","task","setTask","taskTitle","taskCategory","taskKeywords","taskTimer","taskRevisionDate","uniqueId","handleTaskCreation","e","preventDefault","headers","Authorization","count","get","params","userId","console","log","target","value"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskElement.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useId, useState } from 'react'\n\nexport default function TaskElement(props) {\n    \n    const token = props.bToken\n    const user = props.user\n\n    const todayDate = new Date(); \n    const formatDate = todayDate.getDate() < 10 ? `0${todayDate.getDate()}`:todayDate.getDate();\n    const formatMonth = todayDate.getMonth() + 1 < 10 ? `0${todayDate.getMonth() + 1}`: todayDate.getMonth() + 1;\n    const formattedDate = [todayDate.getFullYear(), formatMonth, formatDate].join('-');\n\n    const [task, setTask] = useState({\n        taskTitle: 'Leetcode',\n        taskCategory: '218. Two Sum',\n        taskKeywords: 'Two Pointers, Array',\n        taskTimer: 0,\n        taskRevisionDate: formattedDate\n    })\n\n    const uniqueId = useId()\n\n    const handleTaskCreation = async (e) => {\n        e.preventDefault()\n        const headers = {Authorization: `Bearer ${token}`}\n        \n        const count = await axios.get('http://localhost:4000/api/gettaskscount',{ params: { userId: user.userId } }, {headers: headers})\n\n        console.log(count)\n        //const taskData = {userId: user.userId, taskId: `task-${count}`, ...task}\n        // axios\n        //     .post('http://localhost:4000/api/createtasks', data, {headers: headers})\n        //     .then(() => console.log(\"Task Created\"))\n        //     .catch((e) => console.log(e.message))\n    } \n\n  return (\n    <div>\n        <form onSubmit={handleTaskCreation}>\n            <input \n                type='text' \n                placeholder='Task Title' \n                value={task.taskTitle} \n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskTitle : e.target.value\n                    }\n                )}/>\n            \n            <input \n                type='text' \n                placeholder='Category' \n                value={task.taskCategory}\n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskCategory : e.target.value\n                    }\n                )}/>\n            \n            <input \n                type='text' \n                placeholder='keywords' \n                value={task.taskKeywords}\n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskKeywords : e.target.value\n                    }\n                )}/>\n            \n            <input \n                type='date' \n                placeholder='Next Revision Date' \n                value={task.taskRevisionDate}\n                onChange={e => setTask(\n                    {\n                        ...task,\n                        taskRevisionDate : e.target.value\n                    }\n                )}/>\n\n            <button type='submit'>Submit</button>\n        </form>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}