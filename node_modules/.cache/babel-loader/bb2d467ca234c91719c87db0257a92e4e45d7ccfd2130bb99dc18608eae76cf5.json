{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { getAuth } from \"firebase/auth\";\nimport '../styles/TaskAnalytics.css';\nimport ChartsDaily from './ChartsDaily';\nimport ChartsMonthly from './ChartsMonthly';\nimport ChartsYearly from './ChartsYearly';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskAnalytics() {\n  _s();\n  const {\n    taskId\n  } = useParams();\n  const [taskElement, setTaskElement] = useState({});\n  const [initialFetch, setInitialFetch] = useState(false);\n  const user = getAuth().currentUser;\n  const fetchTask = async () => {\n    const res = await axios.get('http://localhost:4000/api/getTask', {\n      params: {\n        userId: user.uid,\n        taskId: taskId\n      },\n      headers: {\n        Authorization: `Bearer ${user.accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    setTaskElement(res.data);\n    setInitialFetch(true);\n  };\n  useEffect(() => {\n    if (user && initialFetch === false) {\n      fetchTask();\n    }\n  });\n  const shouldDisplayData = () => {\n    if (taskElement !== {} && taskElement.taskTitle !== undefined) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskAnalyticsContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskAnalyticsTaskDetailsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"TaskCardCategoryElement\",\n            children: taskElement.taskCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"TaskCardTitleElement\",\n            children: taskElement.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TaskCardKeywordsContainer\",\n            children: taskElement.taskKeywords.split(',').map(keyword => {\n              if (keyword) {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"TaskCardKeywordElement\",\n                  children: keyword\n                }, keyword, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 44\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChartsDaily, {\n          user: user,\n          task: taskElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChartsMonthly, {\n          user: user,\n          task: taskElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChartsYearly, {\n          user: user,\n          task: taskElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskAnalytics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: shouldDisplayData()\n  }, void 0, false);\n}\n_s(TaskAnalytics, \"TC3GzvtGHAkVcmVi038JSV0YeAg=\", false, function () {\n  return [useParams];\n});\n_c = TaskAnalytics;\nexport default TaskAnalytics;\nvar _c;\n$RefreshReg$(_c, \"TaskAnalytics\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useParams","axios","getAuth","ChartsDaily","ChartsMonthly","ChartsYearly","TaskAnalytics","taskId","taskElement","setTaskElement","initialFetch","setInitialFetch","user","currentUser","fetchTask","res","get","params","userId","uid","headers","Authorization","accessToken","data","shouldDisplayData","taskTitle","undefined","taskCategory","taskKeywords","split","map","keyword"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskAnalytics.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from 'axios'\nimport { getAuth } from \"firebase/auth\";\nimport '../styles/TaskAnalytics.css' \nimport ChartsDaily from './ChartsDaily';\nimport ChartsMonthly from './ChartsMonthly';\nimport ChartsYearly from './ChartsYearly';\n\nfunction TaskAnalytics() {\n    \n    \n    \n    const {taskId} = useParams()\n    const [taskElement, setTaskElement] = useState({})\n    const [initialFetch, setInitialFetch] = useState(false)\n    \n\n    const user = getAuth().currentUser\n    const fetchTask = async () =>{\n        const res = await axios.get('http://localhost:4000/api/getTask', {\n                    params: { userId: user.uid, taskId: taskId },\n                    headers: {\n                        Authorization: `Bearer ${user.accessToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                })\n    \n        setTaskElement(res.data)\n        setInitialFetch(true)\n    }\n    \n    useEffect(()=>{\n        if(user && initialFetch === false){\n            fetchTask()\n        }\n    })\n\n    const shouldDisplayData = () =>{\n        if(taskElement !== {} && taskElement.taskTitle !== undefined){\n            return (\n                <div className='TaskAnalyticsContainer'>\n                    <div className='TaskAnalyticsTaskDetailsContainer'>\n                        <p className='TaskCardCategoryElement'>{taskElement.taskCategory}</p>\n                        <p className='TaskCardTitleElement'>{taskElement.taskTitle}</p>\n                        <div className='TaskCardKeywordsContainer'>\n                            {taskElement.taskKeywords.split(',').map((keyword)=>{\n                                if(keyword){\n                                    return <p key={keyword} className='TaskCardKeywordElement'>{keyword}</p>\n                                }\n                            })}\n                        </div>\n                    </div>\n                    <ChartsDaily user={user} task={taskElement}/>\n                    <ChartsMonthly user={user} task={taskElement}/>\n                    <ChartsYearly user={user} task={taskElement}/>\n                    <TaskAnalytics />\n                </div>\n            )\n        }else{\n            return null\n        }\n    }\n\n    return (\n        <>\n          {shouldDisplayData()}\n        </>\n    )\n}\n\nexport default TaskAnalytics"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAO,6BAA6B;AACpC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAAA;AAE1C,SAASC,aAAa,GAAG;EAAA;EAIrB,MAAM;IAACC;EAAM,CAAC,GAAGP,SAAS,EAAE;EAC5B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAGvD,MAAMa,IAAI,GAAGV,OAAO,EAAE,CAACW,WAAW;EAClC,MAAMC,SAAS,GAAG,YAAW;IACzB,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,mCAAmC,EAAE;MACrDC,MAAM,EAAE;QAAEC,MAAM,EAAEN,IAAI,CAACO,GAAG;QAAEZ,MAAM,EAAEA;MAAO,CAAC;MAC5Ca,OAAO,EAAE;QACLC,aAAa,EAAG,UAAST,IAAI,CAACU,WAAY,EAAC;QAC3C,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEVb,cAAc,CAACM,GAAG,CAACQ,IAAI,CAAC;IACxBZ,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAEDd,SAAS,CAAC,MAAI;IACV,IAAGe,IAAI,IAAIF,YAAY,KAAK,KAAK,EAAC;MAC9BI,SAAS,EAAE;IACf;EACJ,CAAC,CAAC;EAEF,MAAMU,iBAAiB,GAAG,MAAK;IAC3B,IAAGhB,WAAW,KAAK,CAAC,CAAC,IAAIA,WAAW,CAACiB,SAAS,KAAKC,SAAS,EAAC;MACzD,oBACI;QAAK,SAAS,EAAC,wBAAwB;QAAA,wBACnC;UAAK,SAAS,EAAC,mCAAmC;UAAA,wBAC9C;YAAG,SAAS,EAAC,yBAAyB;YAAA,UAAElB,WAAW,CAACmB;UAAY;YAAA;YAAA;YAAA;UAAA,QAAK,eACrE;YAAG,SAAS,EAAC,sBAAsB;YAAA,UAAEnB,WAAW,CAACiB;UAAS;YAAA;YAAA;YAAA;UAAA,QAAK,eAC/D;YAAK,SAAS,EAAC,2BAA2B;YAAA,UACrCjB,WAAW,CAACoB,YAAY,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,OAAO,IAAG;cAChD,IAAGA,OAAO,EAAC;gBACP,oBAAO;kBAAiB,SAAS,EAAC,wBAAwB;kBAAA,UAAEA;gBAAO,GAApDA,OAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAkD;cAC5E;YACJ,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QACA;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ,eACN,QAAC,WAAW;UAAC,IAAI,EAAEnB,IAAK;UAAC,IAAI,EAAEJ;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE,eAC7C,QAAC,aAAa;UAAC,IAAI,EAAEI,IAAK;UAAC,IAAI,EAAEJ;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE,eAC/C,QAAC,YAAY;UAAC,IAAI,EAAEI,IAAK;UAAC,IAAI,EAAEJ;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE,eAC9C,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACf;IAEd,CAAC,MAAI;MACD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,oBACI;IAAA,UACGgB,iBAAiB;EAAE,iBACnB;AAEX;AAAC,GA5DQlB,aAAa;EAAA,QAIDN,SAAS;AAAA;AAAA,KAJrBM,aAAa;AA8DtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}