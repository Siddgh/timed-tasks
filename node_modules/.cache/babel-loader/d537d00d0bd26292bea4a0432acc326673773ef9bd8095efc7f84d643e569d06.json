{"ast":null,"code":"var _jsxFileName = \"/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NavigationBar from './NavigationBar';\nimport axios from 'axios';\nimport { getAuth } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskAnalytics() {\n  _s();\n  const {\n    taskId\n  } = useParams();\n  const [taskElement, setTaskElement] = useState({});\n  const user = getAuth().currentUser;\n  const fetchTask = async () => {\n    const res = await axios.get('http://localhost:4000/api/gettasklist', {\n      params: {\n        userId: user.uid,\n        taskId: taskId\n      },\n      headers: {\n        Authorization: `Bearer ${user.accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (res.data !== 'No Data') {\n      setTaskList(res.data);\n    } else {\n      setTaskList([]);\n    }\n  };\n  useEffect(() => {\n    console.log(user);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskAnalytics, \"YAptKZedmtiSRfpV5X6OuYItaWQ=\", false, function () {\n  return [useParams];\n});\n_c = TaskAnalytics;\nexport default TaskAnalytics;\nvar _c;\n$RefreshReg$(_c, \"TaskAnalytics\");","map":{"version":3,"names":["React","useEffect","useState","useParams","NavigationBar","axios","getAuth","TaskAnalytics","taskId","taskElement","setTaskElement","user","currentUser","fetchTask","res","get","params","userId","uid","headers","Authorization","accessToken","data","setTaskList","console","log"],"sources":["/Users/sidd/Documents/Assignments/BU/CS601/project/timedtasks/src/components/TaskAnalytics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {useParams} from 'react-router-dom'\nimport NavigationBar from './NavigationBar'\nimport axios from 'axios'\nimport { getAuth } from \"firebase/auth\"; \n\nfunction TaskAnalytics() {\n    const {taskId} = useParams()\n    const [taskElement, setTaskElement] = useState({})\n    \n    const user = getAuth().currentUser\n\n\n    const fetchTask = async () =>{\n        const res = await axios.get('http://localhost:4000/api/gettasklist', {\n                    params: { userId: user.uid, taskId: taskId },\n                    headers: {\n                        Authorization: `Bearer ${user.accessToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                })\n                \n                if(res.data !== 'No Data'){\n                    setTaskList(res.data)\n                }else{\n                    setTaskList([])\n                }\n    }\n    \n    useEffect(()=>{\n        console.log(user)\n    }, [])\n\n    return (\n        <div>\n        {taskId}    \n        </div>\n    )\n}\n\nexport default TaskAnalytics"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,eAAe;AAAC;AAExC,SAASC,aAAa,GAAG;EAAA;EACrB,MAAM;IAACC;EAAM,CAAC,GAAGL,SAAS,EAAE;EAC5B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,MAAMS,IAAI,GAAGL,OAAO,EAAE,CAACM,WAAW;EAGlC,MAAMC,SAAS,GAAG,YAAW;IACzB,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,uCAAuC,EAAE;MACzDC,MAAM,EAAE;QAAEC,MAAM,EAAEN,IAAI,CAACO,GAAG;QAAEV,MAAM,EAAEA;MAAO,CAAC;MAC5CW,OAAO,EAAE;QACLC,aAAa,EAAG,UAAST,IAAI,CAACU,WAAY,EAAC;QAC3C,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAGP,GAAG,CAACQ,IAAI,KAAK,SAAS,EAAC;MACtBC,WAAW,CAACT,GAAG,CAACQ,IAAI,CAAC;IACzB,CAAC,MAAI;MACDC,WAAW,CAAC,EAAE,CAAC;IACnB;EACZ,CAAC;EAEDtB,SAAS,CAAC,MAAI;IACVuB,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,UACCH;EAAM;IAAA;IAAA;IAAA;EAAA,QACD;AAEd;AAAC,GAhCQD,aAAa;EAAA,QACDJ,SAAS;AAAA;AAAA,KADrBI,aAAa;AAkCtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}